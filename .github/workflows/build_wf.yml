# This workflow will build a Java project with Gradle whenever Pull and Merge request to main branch
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build WorkFlow - Building and Validating Test Coverage

on:
  pull_request:
    branches: [ main,dev ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build with Gradle
        run: ./gradlew build

      - name: Generate a coverage value
        id: coverage
        # Generates a GitHub Workflow output named `lines`
        run: |
            COVERAGE="$( parse-covergae-report )"
            echo "##[set-output name=lines;]${COVERAGE}%"

            # Use the output from the `coverage` step
            - name: Generate the badge SVG image
              uses: emibcn/badge-action@v1
              with:
                label: 'Test coverage'
                status: ${{ steps.coverage.outputs.lines }}
                color: 'blue,555,daf'
                path: badge.svg

      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: actions/checkout@v1
        with:
          ref: ${{ steps.extract_branch.outputs.branch }}
      - name: Commit badge
        run: |
           git config --local user.email "action@github.com"
           git config --local user.name "GitHub Action"
           git add badge.svg
           git commit -m "Add/Update badge"
      - name: Push badge commit
        uses: ad-m/github-push-action@master
        with:
           github_token: ${{ secrets.GITHUB_TOKEN }}
           branch: ${{ steps.extract_branch.outputs.branch }}